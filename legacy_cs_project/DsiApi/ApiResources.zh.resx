<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ErrorFireShotClearDataReadyBitTimeout" xml:space="preserve">
    <value>正在等待DSI响应。</value>
  </data>
  <data name="ErrorFireShotDataReadyBitTimeout" xml:space="preserve">
    <value>等待数据就绪位以读取点火结果时超时。</value>
  </data>
  <data name="ErrorSetupListEmpty" xml:space="preserve">
    <value>安装是null或空。</value>
  </data>
  <data name="ErrorProbeListEmpty" xml:space="preserve">
    <value>探头是null或空。</value>
  </data>
  <data name="ErrorModBusException" xml:space="preserve">
    <value>设备返回异常代码{0}命令:{1}</value>
  </data>
  <data name="ErrorLoginInvalidUserPass" xml:space="preserve">
    <value>无效的用户名或密码。</value>
  </data>
  <data name="ErrorGateListEmpty" xml:space="preserve">
    <value>闸门是null或空。</value>
  </data>
  <data name="ErrorFireShotSetSetupNumber" xml:space="preserve">
    <value>点火失败。无法为点火设置安装数。</value>
  </data>
  <data name="ErrorFireShotSetProbeNumber" xml:space="preserve">
    <value>点火失败。无法为点火设置探头数。</value>
  </data>
  <data name="ErrorFireShotSetFireRegister" xml:space="preserve">
    <value>点火失败。无法为点火设置试点火。</value>
  </data>
  <data name="ErrorFireShotReadSetupInfo" xml:space="preserve">
    <value>无法从DSI读取安装信息。</value>
  </data>
  <data name="ErrorFireShotReadProbeInfo" xml:space="preserve">
    <value>无法从DSI读取探头信息。</value>
  </data>
  <data name="ErrorPortName" xml:space="preserve">
    <value>端口名尚未定义。请转至“设置”并选择一个COM端口。</value>
  </data>
  <data name="ErrorPortOpen" xml:space="preserve">
    <value>无法打开名为'{0}'的端口。</value>
  </data>
  <data name="ErrorReadLoggedShotsSetRealTimeClock" xml:space="preserve">
    <value>在读取记录的镜头后启用数据记录器模式时，无法设置实时时钟</value>
  </data>
  <data name="ErrorReadLoggedShotsSetProbeNumber" xml:space="preserve">
    <value>无法读取记录的镜头。无法将探针编号设置为读取。</value>
  </data>
  <data name="ErrorReadLoggedShotsReadShotCount" xml:space="preserve">
    <value>无法读取记录的镜头数。</value>
  </data>
  <data name="ErrorReadLoggedShotsPrepareNextShotSetBit" xml:space="preserve">
    <value>无法读取记录的镜头。无法准备从数据记录器DSI读取探针{1}的镜头{0}。</value>
  </data>
  <data name="ErrorReadLoggedShotsEnableLogging" xml:space="preserve">
    <value>读取记录的镜头后无法启用数据记录。</value>
  </data>
  <data name="ErrorReadLoggedShotsDisableLogging" xml:space="preserve">
    <value>读取记录的镜头时无法禁用数据记录。</value>
  </data>
  <data name="ErrorReadLoggedShotsSetSetupNumber" xml:space="preserve">
    <value>无法读取记录的镜头。无法将设置编号（始终为0）设置为读取。</value>
  </data>
  <data name="ErrorFailedToReadLoggerHeartbeat" xml:space="preserve">
    <value>等待数据记录器心跳消息超时。 放弃。</value>
  </data>
  <data name="ErrorLoginUnexpectedServerResponse" xml:space="preserve">
    <value>服务器响应不正常（200）。</value>
  </data>
</root>